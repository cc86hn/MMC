evaluationDependsOn(':Test')
evaluationDependsOn(':Radio')
evaluationDependsOn(':Audio')
evaluationDependsOn(':Beamer')
evaluationDependsOn(':Stream')

apply plugin:'java'

apply plugin:'application'
apply from: "$rootDir/utils/IO.gradle"



version = '0.0.1.0'
mainClassName = 'org.cc86.MMC.server.Main'



startScripts << { 

  def startScriptDir = outputDir.getAbsolutePath()
  def winStartScript = startScriptDir + "/" + applicationName + ".bat"
  def winStartScriptCopy = startScriptDir + "/" + applicationName + "c.bat"
  def overwriteExistingFile = true
  copyFile(winStartScript, winStartScriptCopy, overwriteExistingFile)

  modifyFile(winStartScript) {
    // javaw.exe doesn't have a console
    if(it.contains("java.exe")){
      return it.replace("java.exe", "javaw.exe")
    }
    // Command that launches the app
    else if(it.startsWith("\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS%")){
      return "start \"\" /b " + it
    }
    // Leave the line unchanged
    else{
      return it
    }
  }
}
distZip {
  // Include the additional start script
  into(project.name+"-"+project.version+"/bin/"){
    from(startScripts.outputDir)
	include '*c.bat'
  }
  into(project.name+"-"+project.version+"/plugins/"){
        from project(':Test').jar
        from project(':Radio').jar
        from project(':Audio').jar
        //from project(':Beamer').jar
        from project(':Stream').jar
  }
}



compileJava.options.encoding = 'UTF-8'
dependencies
{
	compile fileTree(dir: 'lib', include: '*.jar')
        
        compile ('uk.co.caprica:vlcj:3.0.0' ){
            exclude group: 'net.java.dev.jna'
        }
		compile project(':shared')
        compile 'net.java.dev.jna:jna-platform:4.1.0'
        compile 'net.java.dev.jna:jna:4.1.0'
        
}
repositories{
        jcenter()

        maven {
                url "https://repository.apache.org/content/repositories/snapshots"
        }

        maven { url "http://repo.gradle.org/gradle/libs-releases-local" }
}


def versionOverrides = [
    "asm:asm": "3.3.1",
    "bultitude:bultitude": "0.1.7",
    "commons-codec:commons-codec": "1.7",
    "commons-io:commons-io": "2.4",
    "io.aviso:pretty": "0.1.9-SNAPSHOT",
    "joda-time:joda-time": "2.1",
    "org.clojure:core.incubator": "0.1.1",
    "org.clojure:tools.macro": "0.1.1",
    "org.clojure:tools.namespace": "0.1.1",
    "org.codehaus.groovy:groovy-all": "1.8.6",
    "org.jsoup:jsoup": "1.7.1",
    "org.yaml:snakeyaml": "1.12",
    "slingshot:slingshot": "0.10.3"
]

